---

- name: Ensure required variables have been set
  ansible.builtin.fail:
    msg: "'{{ item.name }}' is not defined"
  loop:
    - { name: web_adt_apache_httpd_config_extras_dir, value: "{{ web_adt_apache_httpd_config_extras_dir }}" }
    - { name: web_adt_apache_httpd_document_root, value: "{{ web_adt_apache_httpd_document_root }}" }
    - { name: web_adt_apache_httpd_listen_address, value: "{{ web_adt_apache_httpd_listen_address }}" }
    - { name: web_adt_apache_httpd_logs_root, value: "{{ web_adt_apache_httpd_logs_root }}" }
    - { name: web_adt_apache_httpd_server_user, value: "{{ web_adt_apache_httpd_server_user }}" }
    - { name: web_adt_apache_httpd_server_user_group, value: "{{ web_adt_apache_httpd_server_user_group }}" }
    - { name: web_adt_db_user, value: "{{ web_adt_db_user }}" }
    - { name: web_adt_db_user_password, value: "{{ web_adt_db_user_password }}" }
  when: not item.value
  tags: ["web_adt"]

- name: Install PHP repository
  ansible.builtin.apt_repository:
    repo: ppa:ondrej/php
    state: present
    update_cache: yes
  become: true
  tags: ["web_adt"]

- name: Install PHP 7.4 and other required dependencies
  ansible.builtin.apt:
    name:
      - php7.4
      - php7.4-curl
      - php7.4-mysql
      - php7.4-xml
    state: present
  become: true
  tags: ["web_adt"]

- name: Create WebADT database user
  become: true
  community.mysql.mysql_user:
    login_unix_socket: "{{ web_adt_db_socket_file_path }}"
    name: "{{ web_adt_db_user }}"
    password: "{{ web_adt_db_user_password }}"
    priv: "{{ web_adt_db_user_privileges }}"
    state: present
  tags: ["web_adt"]

- name: Create WebADT application database
  community.mysql.mysql_db:
    login_host: "{{ web_adt_db_host }}"
    login_password: "{{ web_adt_db_user_password }}"
    login_port: "{{ web_adt_db_port }}"
    login_user: "{{ web_adt_db_user }}"
    name: "{{ web_adt_db_name }}"
    state: present
  tags: ["web_adt"]

- name: Download WebADT distribution archive
  ansible.builtin.get_url:
    dest: "{{ web_adt_preferred_temp_dir }}/WebADT.zip"
    force: no
    timeout: 10
    url: "{{ web_adt_dist_download_url }}"
  become: true
  register: web_adt_dist_download_data
  tags: ["web_adt"]
  
- name: Unarchive WebADT distribution archive
  ansible.builtin.unarchive:
    dest: "{{ web_adt_preferred_temp_dir }}"
    keep_newer: no  # Overwrite everything
    remote_src: yes
    src: "{{ web_adt_dist_download_data.dest }}"
  become: true
  tags: ["web_adt"]
    
- name: Unarchive WebADT application files
  ansible.builtin.unarchive:
    dest: "{{ web_adt_preferred_temp_dir }}"
    keep_newer: no  # Overwrite everything
    remote_src: yes
    src: "{{ web_adt_preferred_temp_dir }}/2.Installer/resources/xampp.zip"
  become: true
  tags: ["web_adt"]

- name: Install WebADT distribution
  ansible.builtin.copy:
    dest: "{{ web_adt_apache_httpd_document_root }}"
    directory_mode: "ug=rwx,o=rx"
    group: "{{ web_adt_apache_httpd_server_user_group }}"
    mode: "ug=rwx,o=rx"
    owner: "{{ web_adt_apache_httpd_server_user }}"
    remote_src: yes
    src: "{{ web_adt_preferred_temp_dir }}/xampp/htdocs/ADT"
  become: true
  tags: ["web_adt"]

- name: Overwrite hardcoded database login details
  ansible.builtin.lineinfile:
    backup: no
    create: no
    firstmatch: yes
    group: "{{ web_adt_apache_httpd_server_user_group }}"
    line: "{{ item.result }}"
    mode: "ug=rw,o=r"
    owner: "{{ web_adt_apache_httpd_server_user }}"
    path: "{{ web_adt_apache_httpd_document_root }}/ADT/app/Config/Database.php"
    search_string: "{{ item.match }}"
    state: present
  loop:
    - { match: "'database' => 'testadt'",        result: "        'database' => '{{ web_adt_db_name }}'," }
    - { match: "'hostname' => 'localhost:3307'", result: "        'hostname' => '{{ web_adt_db_host }}:{{ web_adt_db_port }}'," }
    - { match: "'password' => 'root'",           result: "        'password' => '{{ web_adt_db_user_password }}'," }
    - { match: "'port' => 3307",                 result: "        'port' => {{ web_adt_db_port }}," }
    - { match: "'username' => 'root'",           result: "        'username' => '{{ web_adt_db_user }}'," }
  become: true
  tags: ["web_adt"]

- name: Add WebADT specific server configuration
  ansible.builtin.template:
    backup: yes
    dest: "{{ web_adt_apache_httpd_config_extras_dir }}"
    force: yes
    mode: "ug=rw,o=r"
    group: "{{ web_adt_apache_httpd_server_user_group }}"
    owner: "{{ web_adt_apache_httpd_server_user }}"
    src: web_adt_httpd.conf
  become: true
  tags: ["web_adt"]

- name: Enable Apache rewrite module (mod_rewrite)
  ansible.builtin.command:
    cmd: a2enmod rewrite
  become: true
  tags: ["web_adt"]

- name: Fresh installation setup
  block:
    - name: Restore the database from db dumps
      community.mysql.mysql_db:
        login_host: "{{ web_adt_db_host }}"
        login_password: "{{ web_adt_db_user_password }}"
        login_port: "{{ web_adt_db_port }}"
        login_user: "{{ web_adt_db_user }}"
        name: "{{ web_adt_db_name }}"
        state: import
        target: "{{ item }}"
      ignore_errors: true  # This is necessary because the second file restoration always fails.
      loop:
        - "{{ web_adt_preferred_temp_dir }}/2.Installer/resources/database/testadt_v4_tables_only.sql"
        - "{{ web_adt_preferred_temp_dir }}/2.Installer/resources/database/testadt.sql"
  become: true
  tags: ["web_adt"]
  when: web_adt_is_fresh_install
