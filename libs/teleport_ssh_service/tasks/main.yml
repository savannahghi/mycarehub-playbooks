---

- name: Ensure required variables have been set
  ansible.builtin.fail:
    msg: "'{{ item.name }}' is not defined"
  loop:
    - { name: teleport_ssh_auth_token, value: "{{ teleport_ssh_auth_token }}" }
    - { name: teleport_ssh_ca_pin, value: "{{ teleport_ssh_ca_pin }}" }
    - { name: teleport_ssh_node_env, value: "{{ teleport_ssh_node_env }}" }
    - { name: teleport_ssh_node_provider, value: "{{ teleport_ssh_node_provider }}" }
    - { name: teleport_ssh_node_region, value: "{{ teleport_ssh_node_region }}" }
    - { name: teleport_ssh_proxy_server, value: "{{ teleport_ssh_proxy_server }}" }
  when: not item.value
  tags: ["teleport_ssh_service"]

- name: Install Teleport and configure the Teleport SSH Service
  ansible.builtin.import_role:
    name: teleport
  vars:
    teleport_auth_token: "{{ teleport_ssh_auth_token }}"
    teleport_ca_pin: "{{ teleport_ssh_ca_pin }}"
    teleport_config_ssh_service_section: |4
            enabled: yes

            # Static labels for the node
            labels:
              env: {{ teleport_ssh_node_env }}
              provider: {{ teleport_ssh_node_provider }}
              region: {{ teleport_ssh_node_region }}
              {{ teleport_ssh_extra_static_label }}

            # Dynamic labels for the node
            # The command value is the what is run just like running
            # it at the shell e.g. lsb_release -d
            commands:
              - name: uptime
                command: [uptime, -p]
                period: 1m0s
              - name: os-release
                command: [lsb_release, -ds]
                period: 1h0m0s
              - name: os-codename
                command: [lsb_release, -cs]
                period: 1h0m0s
                {{ teleport_ssh_extra_dynamic_label }}
    teleport_force_config_overwrite: yes
    teleport_proxy_server: "{{ teleport_ssh_proxy_server }}"
  tags: ["teleport_ssh_service"]
