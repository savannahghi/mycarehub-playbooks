---

- name: Check if required vars have been defined
  ansible.builtin.fail: msg="{{ item }} is not defined"
  when: not item
  loop:
      - nginx_site_filename
      - nginx_site_server_name
      - nginx_site_confirm_string
  tags: ["nginx_site"]

- name: Add site config
  ansible.builtin.template:
      src: nginx_site.nginx.conf
      dest: "/etc/nginx/sites-available/{{ nginx_site_filename }}"
      owner: "root"
      group: "root"
      mode: "u=rw,g=rw,o=r"
  become: true
  tags: ["nginx_site"]

- name: Enable site
  ansible.builtin.file:
      src: "/etc/nginx/sites-available/{{ nginx_site_filename }}"
      dest: "/etc/nginx/sites-enabled/{{ nginx_site_filename }}"
      state: link
      owner: "root"
      group: "root"
      mode: "u=rw,g=rw,o=r"
  become: true
  tags: ["nginx_site"]

- name: Restart nginx
  ansible.builtin.service: name=nginx state=restarted
  become: true
  tags: ["nginx_site"]

- name: Access site
  ansible.builtin.uri:
      url: "{{ nginx_site_server_url }}"
      return_content: yes
      validate_certs: "{{ nginx_site_validate_certs }}"
  retries: 3
  delay: 5
  register: accessed_page
  until: accessed_page.status == 200
  failed_when: nginx_site_confirm_string not in accessed_page.content
  ignore_errors: "{{ ansible_check_mode }}"
  tags: ["nginx_site"]
