# =============================================================================
# BASE APP SETTINGS
# =============================================================================

# A function that when called should return a Transport instance.
DEFAULT_TRANSPORT_FACTORY: "app.lib.transports.http.http_transport_factory"

# The logging configuration for the app.
LOGGING:
  version: 1
  formatters:
    simple:
      format: "%(levelname)s: %(asctime)s %(module)s %(process)d %(message)s"
    verbose:
      format: "{levelname}: {asctime} - {process:d} {thread:d} - <module={module} | function={funcName} | line={lineno:d}> - {message}"
      style: "{"
  handlers:
    console:
      class: "logging.StreamHandler"
      formatter: "simple"
      level: "DEBUG"
    file:
      backupCount: 5
      class: "logging.handlers.RotatingFileHandler"
      encoding: "utf-8"
      filename: "{{ idr_client_logs_dir }}/idr_client.log"
      formatter: "verbose"
      level: "DEBUG"
      maxBytes: 1048576  # 1 MB
  loggers:
    app:
      handlers: [ "console", "file" ]
      level: "DEBUG"
      propagate: true

# The retry module global configuration. The values here will be used for each
# retry instance when not specified.
# This setting is not required and defaults to the values given below.
RETRY:
  default_deadline: 300  # Seconds
  default_initial_delay: 1.0  # Seconds
  default_maximum_delay: 60  # Seconds
  default_multiplicative_factor: 2.0
  enable_retries: true

# These are the tasks to be executed during the application set up phase. The
# tasks are given the current value of the setting they are registered for or
# None if no value was given. Their return value is then assigned as the new
# value of the setting.
# This is not a required setting and defaults to an empty list.
SETTINGS_INITIALIZERS:
  - "app.lib.retry.RetryInitializer"

# The different data source types supported by the app. This determines the
# kinds of data that the app can extract and send to a server.
SUPPORTED_DATA_SOURCE_TYPES:
  - "app.imp.sql_data.SQLDataSourceType"



# =============================================================================
# HTTP TRANSPORT SETTINGS
# =============================================================================

# Configurations for the HTTPTransport
HTTP_TRANSPORT:
  default_http_api_dialect_factory: "app.lib.transports.http.idr_server_api_v1_dialect_factory"
  connect_timeout: 60  # 1 minutes
  read_timeout: 60 # 1 minute

# A function that when called should return a HTTPAPIDialect.
DEFAULT_HTTP_API_DIALECT_FACTORY: "app.lib.http.idr_server_api_v1_dialect_factory"


# =============================================================================
# IDR SERVER DETAILS
# =============================================================================
# The configuration of the backend to this app. This setting is used by HTTP
# API dialects.

REMOTE_SERVER:
  host: "{{ idr_client_server_url }}"
  username: "{{ idr_client_server_username }}"
  password: "{{ idr_client_server_password }}"

# =============================================================================
# SQL DATA SOURCES SETTINGS
# =============================================================================

MYSQL_DB_INSTANCE:
  host: "{{ idr_client_host_mysql_address }}"
  port: "{{ idr_client_host_mysql_port }}"
  username: "{{ idr_client_host_mysql_username }}"
  password: "{{ idr_client_host_mysql_password }}"

# =============================================================================
# FACILITY DETAILS
# =============================================================================

ORG_UNIT_NAME: "{{ idr_client_facility_name }}"
ORG_UNIT_CODE: "{{ idr_client_facility_mfl_code }}" 

