---

- name: Install Nginx
  ansible.builtin.apt:
    name: nginx
    state: present
  become: true
  tags: ["nginx"]

- name: Activate Nginx service
  ansible.builtin.service:
    enabled: true
    name: nginx
  become: true
  tags: ["nginx"]

- name: Overwrite Nginx default site
  ansible.builtin.template:
    dest: /etc/nginx/sites-available/default
    group: root
    mode: "u=rw,g=rw,o=r"
    owner: root
    src: nginx.default.site
  become: true
  tags: ["nginx"]

- name: Make directory for dummy certificates
  ansible.builtin.file:
    group: "root"
    mode: "u=rwx,g=rwx,o=rx"
    name: "{{ nginx_dummy_certs_dir }}"
    owner: root
    state: directory
  become: true
  tags: ["nginx"]

- name: Copy dummy certs
  ansible.builtin.copy:
    dest: "{{ nginx_dummy_certs_dir }}/{{ item.dest }}"
    group: root
    mode: "u=rw,g=rw,o=r"
    owner: root
    src: "{{ item.src }}"
  loop:
    - {src: "nginx.dummy.crt", dest: "dummy.crt"}
    - {src: "nginx.dummy.key", dest: "dummy.key"}
  become: true
  tags: ["nginx"]

- name: Ensure default site is enabled
  ansible.builtin.file:
    dest: /etc/nginx/sites-enabled/default
    group: root
    mode: "u=rw,g=rw,o=r"
    owner: root
    src: /etc/nginx/sites-available/default
    state: link
  become: true
  tags: ["nginx"]

- name: Overwrite the default mimetypes file
  ansible.builtin.copy:
    dest: /etc/nginx/mime.types
    group: root
    mode: "u=rw,g=rw,o=r"
    owner: root
    src: nginx.default.mimetypes
  become: true
  notify:
    - confirm nginx config
    - restart nginx
  tags: ["nginx"]

- name: Overwrite the default config
  ansible.builtin.template:
    dest: /etc/nginx/nginx.conf
    group: root
    mode: "u=rw,g=rw,o=r"
    owner: root
    src: nginx.default.conf
  become: true
  notify:
    - restart nginx
  tags: ["nginx"]
